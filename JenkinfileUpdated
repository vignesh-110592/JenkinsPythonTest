pipeline {
    agent any

    parameters {
        string(name: 'Company_name', defaultValue: 'Alten GmbH', description: 'Company Name')
        string(name: 'Person_name', defaultValue: 'John Doe', description: 'Person Name')
        string(name: 'Position_name', defaultValue: 'Software Engineer', description: 'Position')
    }

    environment {
        IMAGE_NAME = 'my-python-script'
        WORKSPACE_DIR = "${env.WORKSPACE}"
    }

    stages {
        stage('Checkout SCM') {
            steps {
                checkout scmGit(branches: [[name: '*/main']], extensions: [], userRemoteConfigs: [[url: 'https://github.com/vignesh-110592/JenkinsPythonTest.git']])
            }
        }

        stage('Build Docker Image') {
            steps {
                script {
                    bat """
                        docker build -t %IMAGE_NAME% .
                    """
                }
            }
        }

        stage('Update DOCX Files') {
            steps {
                script {
                    bat """
                        docker run --rm ^
                            -v "%WORKSPACE_DIR%:/app" ^
                            -w /app ^
                            %IMAGE_NAME% ^
                            python replace_docx_text.py "%COMPANY_NAME%" "%PERSON_NAME%" "%POSITION_NAME%"
                    """
                }
            }
        }

        stage('Verify Updates') {
            steps {
                script {
                    bat """
                        docker run --rm ^
                            -v "%WORKSPACE_DIR%:/app" ^
                            -w /app ^
                            %IMAGE_NAME% ^
                            python verify_docx_text.py "%COMPANY_NAME%" "%PERSON_NAME%" "%POSITION_NAME%"
                    """
                }
            }
        }

        stage('Convert to PDF') {
            steps {
                script {
                    bat """
                        python convert_docx_to_pdf.py
                    """
                }
            }
        }
    }
}
