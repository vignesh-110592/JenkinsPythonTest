# This workflow will install Python dependencies, run tests and lint with a single version of Python
# For more information see: https://docs.github.com/en/actions/automating-builds-and-tests/building-and-testing-python

name: Python application

on:
  push:
    branches: [ "main" ]
  pull_request:
    branches: [ "main" ]

permissions:
  contents: read

jobs:
  build:

    runs-on: ${{ matrix.os }}
    strategy:
      matrix:
        os: [ubuntu-latest, windows-latest, macos-latest]
        python-version: [3.10]

    steps:
    - name: Checkout code
      uses: actions/checkout@v4

    - name: Install LibreOffice (Ubuntu)
      if: runner.os == 'ubuntu-latest'
      run: |
        sudo apt update
        sudo apt install -y libreoffice

    - name: Install LibreOffice (macOS)
      if: matrix.os == 'macos-latest'
      run: |
          brew update
          brew install --cask libreoffice
          echo "/Applications/LibreOffice.app/Contents/MacOS" >> $GITHUB_PATH   
               
    - name: Install LibreOffice (Windows)
      if: runner.os == 'windows-latest'
      run: |
        choco install libreoffice-fresh --no-progress --yes
        echo "C:\Program Files\LibreOffice\program" | Out-File -Append -FilePath $env:GITHUB_PATH -Encoding utf8

    - name: Set up Python 3.10
      uses: actions/setup-python@v3
      with:
        python-version: "3.10"

    - name: Install dependencies (Linux/macOS)
      if: runner.os != 'Windows'
      shell: bash
      run: |
        python -m pip install --upgrade pip
        pip install -r requirements.txt

    - name: Install dependencies (Windows)
      if: runner.os == 'Windows'
      shell: pwsh
      run: |
        python -m pip install --upgrade pip
        pip install -r requirements.txt

    - name: Lint with flake8
      run: |
        # stop the build if there are Python syntax errors or undefined names
        flake8 . --count --select=E9,F63,F7,F82 --show-source --statistics
        # exit-zero treats all errors as warnings. The GitHub editor is 127 chars wide
        flake8 . --count --exit-zero --max-complexity=10 --max-line-length=127 --statistics

    - name: Run all tests
      run: pytest
