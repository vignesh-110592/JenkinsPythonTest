pipeline {
    agent any

    parameters {
        string(name: 'Company_name', defaultValue: 'Alten GmbH', description: 'Company Name')
        string(name: 'Person_name', defaultValue: 'geehrte', description: 'Person Name')
        string(name: 'Position_name', defaultValue: 'DevOps Engineer', description: 'Position')
        booleanParam(name: 'REBUILD_IMAGE', defaultValue: false, description: 'Force Docker image rebuild?')
    }

    environment {
        IMAGE_NAME = 'my-python-script'
        WORKSPACE_DIR = "${env.WORKSPACE}"
    }

    stages {

        stage('Build Docker Image') {
            when {
                expression {
                    return params.REBUILD_IMAGE == true
                }
            }
            steps {
                script {
                    bat """
                        docker build -t %IMAGE_NAME% .
                    """
                }
            }
        }

        stage('Update DOCX Files') {
            steps {
                script {
                    bat """
                        docker run --rm ^
                            -v "%WORKSPACE_DIR%:/app" ^
                            -w /app ^
                            %IMAGE_NAME% ^
                            python replace_docx_text.py "%COMPANY_NAME%" "%PERSON_NAME%" "%POSITION_NAME%"
                    """
                }
            }
        }

        stage('Verify Updates') {
            steps {
                script {
                    bat """
                        docker run --rm ^
                            -v "%WORKSPACE_DIR%:/app" ^
                            -w /app ^
                            %IMAGE_NAME% ^
                            python verify_docx_text.py "%COMPANY_NAME%" "%PERSON_NAME%" "%POSITION_NAME%"
                    """
                }
            }
        }
        
        stage('Convert to PDF') {
            steps {
                bat """
                    python convertToPDF_windows.py
                """
            }
        }
    }
}
